import mongoose from 'mongoose';
import dotenv from 'dotenv';
import path from 'path';

dotenv.config({ path: path.resolve(__dirname, '../.env') });

// Esquema b√°sico y flexible
const userSchema = new mongoose.Schema({}, { strict: false });

const WordleUser = mongoose.model('User', userSchema, 'users');
const Usuarios = mongoose.model('Usuario', userSchema, 'Usuarios');

const run = async () => {
  try {
    await mongoose.connect(process.env.MONGODB_URI!);
    console.log('‚úÖ Conectado a MongoDB (Wordle)');

    const allUsers = await WordleUser.find();
    console.log(`üì¶ Usuarios encontrados en 'users': ${allUsers.length}`);

    if (allUsers.length === 0) {
      console.log('‚ö†Ô∏è No hay usuarios para migrar.');
      return process.exit(0);
    }

    for (const user of allUsers) {
      const email = (user as any).email;

      if (!email) continue;

      const exists = await Usuarios.findOne({ email });

      if (!exists) {
        const doc = new Usuarios(user.toObject());
        await doc.save();
        console.log(`‚úÖ Migrado: ${email}`);
      } else {
        console.log(`‚ö†Ô∏è Ya exist√≠a: ${email} ‚Üí omitido`);
      }
    }

    console.log('‚úÖ Migraci√≥n completada a colecci√≥n Usuarios.');
    process.exit(0);
  } catch (err) {
    console.error('‚ùå Error en la migraci√≥n:', err);
    process.exit(1);
  }
};

run();
